{"version":3,"sources":["components/Toast.jsx","hooks/auth.hook.js","components/AuthorizedForm.jsx","components/UnauthorizedForm.jsx","components/AuthPage.jsx","hooks/message.hook.js","hooks/http.hook.js","App.js","reportWebVitals.js","index.js"],"names":["ToastCompanent","className","id","role","type","localStorageName","AuthorizedForm","logoutHandler","loading","userId","onClick","disabled","UnauthorizedForm","changeFormHandler","registerHandler","loginHandler","name","onChange","AuthPage","message","useCallback","errorText","myToastEl","document","getElementById","querySelector","textContent","Toast","getOrCreateInstance","show","useState","setLoading","error","setError","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","clearError","useHttp","email","password","form","setForm","token","setToken","setUserId","login","jwtToken","localStorage","setItem","logout","removeItem","useEffect","parse","getItem","useAuth","isAuthorized","userID","event","target","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f52a433c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ToastCompanent = () => {\r\n  return (\r\n    <div className=\"toast-container position-absolute top-0 end-0 p-3\">\r\n      <div\r\n        id=\"myToastEl\"\r\n        className=\"toast text-white bg-danger align-items-center\"\r\n        role=\"alert\"\r\n        aria-live=\"assertive\"\r\n        aria-atomic=\"true\"\r\n      >\r\n        <div className=\"d-flex\">\r\n          <div className=\"toast-body\">\r\n            Hello, world! This is a toast message.\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close btn-close-white me-2 m-auto\"\r\n            data-bs-dismiss=\"toast\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nconst localStorageName = 'user';\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    localStorage.setItem(\r\n      localStorageName,\r\n      JSON.stringify({ userId: id, token: jwtToken })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback((jwtToken, id) => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(localStorageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(localStorageName));\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId };\r\n};\r\n","import React from 'react';\r\n\r\nexport const AuthorizedForm = ({ logoutHandler, loading, userId }) => {\r\n  return (\r\n    <div className=\"card text-white bg-primary my-5\">\r\n      <div className=\"card-header\">\r\n        <h2>You are authorized</h2>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Welcome {userId}</h5>\r\n        <p className=\"card-text\">Logout to be unAuthorized!</p>\r\n        <div className=\"text-end\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={logoutHandler}\r\n            disabled={loading}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const UnauthorizedForm = ({\r\n  changeFormHandler,\r\n  registerHandler,\r\n  loginHandler,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <div className=\"card text-white bg-primary my-5\">\r\n      <div className=\"card-header\">\r\n        <h2>Authorization</h2>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Welcome on site</h5>\r\n        <p className=\"card-text\">Login or register to be Authorized!</p>\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Sizing example input\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              onChange={changeFormHandler}\r\n            />\r\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n              Email\r\n            </span>\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              aria-label=\"Sizing example input\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n              onChange={changeFormHandler}\r\n            />\r\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n              Password\r\n            </span>\r\n          </div>\r\n          <div className=\"text-end\">\r\n            <button\r\n              className=\"btn btn-dark\"\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n            <button\r\n              className=\"btn btn-dark ms-3\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { ToastCompanent } from './Toast';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { useAuth } from '../hooks/auth.hook';\r\nimport { AuthorizedForm } from './AuthorizedForm';\r\nimport { UnauthorizedForm } from './UnauthorizedForm';\r\n\r\nconst AuthPage = () => {\r\n  const message = useMessage();\r\n  const { loading, error, request, clearError } = useHttp();\r\n  const [form, setForm] = useState({ email: '', password: '' });\r\n  const { login, logout, token, userId } = useAuth();\r\n  const isAuthorized = !!token;\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  function changeFormHandler(event) {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  async function registerHandler() {\r\n    try {\r\n      const data = await request('/api/auth/register', 'POST', { ...form });\r\n      login(data.token, data.userID);\r\n    } catch (e) {}\r\n  }\r\n\r\n  async function loginHandler() {\r\n    try {\r\n      const data = await request('/api/auth/login', 'POST', { ...form });\r\n      login(data.token, data.userID);\r\n    } catch (e) {}\r\n  }\r\n\r\n  function logoutHandler() {\r\n    logout();\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {isAuthorized ? (\r\n        <AuthorizedForm\r\n          logoutHandler={logoutHandler}\r\n          loading={loading}\r\n          userId={userId}\r\n        />\r\n      ) : (\r\n        <UnauthorizedForm\r\n          changeFormHandler={changeFormHandler}\r\n          registerHandler={registerHandler}\r\n          loginHandler={loginHandler}\r\n          loading={loading}\r\n        />\r\n      )}\r\n      <ToastCompanent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import { Toast } from 'bootstrap';\r\nimport { useCallback } from 'react';\r\n\r\nexport const useMessage = () => {\r\n  return useCallback((errorText) => {\r\n    var myToastEl = document.getElementById('myToastEl');\r\n    if (!myToastEl || !errorText) return;\r\n    myToastEl.querySelector('.toast-body').textContent = errorText;\r\n    var myToast = Toast.getOrCreateInstance(myToastEl);\r\n    myToast.show();\r\n  }, []);\r\n};\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      try {\r\n        setLoading(true);\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers['Content-Type'] = 'application/json';\r\n        }\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || 'Something went wrong');\r\n        }\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import React from 'react';\nimport AuthPage from './components/AuthPage';\n\nfunction App() {\n  return <AuthPage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}